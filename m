Return-Path: <nouveau-bounces@lists.freedesktop.org>
X-Original-To: lists+nouveau@lfdr.de
Delivered-To: lists+nouveau@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id CA56BC25AE
	for <lists+nouveau@lfdr.de>; Mon, 30 Sep 2019 19:07:46 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 947EB6E08C;
	Mon, 30 Sep 2019 17:07:44 +0000 (UTC)
X-Original-To: nouveau@lists.freedesktop.org
Delivered-To: nouveau@lists.freedesktop.org
Received: from mx1.redhat.com (mx1.redhat.com [209.132.183.28])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 07EE56E08C
 for <nouveau@lists.freedesktop.org>; Mon, 30 Sep 2019 17:07:43 +0000 (UTC)
Received: from mail-wm1-f71.google.com (mail-wm1-f71.google.com
 [209.85.128.71])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
 (No client certificate requested)
 by mx1.redhat.com (Postfix) with ESMTPS id 4C035C0546FB
 for <nouveau@lists.freedesktop.org>; Mon, 30 Sep 2019 17:07:43 +0000 (UTC)
Received: by mail-wm1-f71.google.com with SMTP id 124so287278wmz.1
 for <nouveau@lists.freedesktop.org>; Mon, 30 Sep 2019 10:07:43 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:reply-to
 :mime-version:content-transfer-encoding;
 bh=cs776fH4erFtXUSzzVn3rAy9fW72VGqJRx6dq549BTs=;
 b=nsGtcDCG8sX2iIxB7qnT35je4kZa4DXReEZ0z9yofARmtqKa9F4zQ5wWo5C29MNLv3
 uFKIXvjYha8buYJ8Av586Jy4YHW3JRW39f+hCshdnWokBejQwpTmmjtn6bH5YCj6hpi7
 YETZQ7yBGE+MMc7wY/0srYj1U8WEfItkaobjvImCWJL1X+EV3IU32YD2eJbZMyRBz8Sh
 srdgySC0sKJXCwW1qvnZcTJlP0iWTI7u3zIWCyvUmf88dxIs37gI5i077Vq5e7Qql5jI
 bVsYRXvX30UEJLfmdZ6W9WqPMUJp11b5GeqWrL6qQcjcuCJjejuP1cHp6q6AMArpBHpB
 wkiA==
X-Gm-Message-State: APjAAAVSrlCxtCk1Pfqj/qDdunP2paZOWRJVxuViv7v7Y810RQkuSNTn
 XFumFz2n6EQbmVtnyNqTOwgz1D9tG6SBOyZoCq2LP31q+57duur68fO74w5Y9e6wQWJJ7gk7wzI
 Xz4tIbGm6tKDUFqyUzDQ/eXanHw==
X-Received: by 2002:a7b:c4c9:: with SMTP id g9mr199042wmk.150.1569863262034;
 Mon, 30 Sep 2019 10:07:42 -0700 (PDT)
X-Google-Smtp-Source: APXvYqzb0zH1A2+zMb9dORMy0r94rwSyu0arMgvSfgbq6H2j091sJVKqDUCQszgUPNoaGIR1IOjP4g==
X-Received: by 2002:a7b:c4c9:: with SMTP id g9mr199015wmk.150.1569863261784;
 Mon, 30 Sep 2019 10:07:41 -0700 (PDT)
Received: from kherbst.pingu.com ([2a02:8308:b0be:6900:7db2:cb58:5fb:97a5])
 by smtp.gmail.com with ESMTPSA id r12sm12077573wrq.88.2019.09.30.10.07.40
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Mon, 30 Sep 2019 10:07:40 -0700 (PDT)
From: Karol Herbst <kherbst@redhat.com>
To: linux-kernel@vger.kernel.org
Date: Mon, 30 Sep 2019 19:07:38 +0200
Message-Id: <20190930170738.20162-1-kherbst@redhat.com>
X-Mailer: git-send-email 2.21.0
MIME-Version: 1.0
Subject: [Nouveau] [RFC PATCH] pci: prevent putting pcie devices into lower
 device states on certain intel bridges
X-BeenThere: nouveau@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Nouveau development list <nouveau.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/nouveau>,
 <mailto:nouveau-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/nouveau>
List-Post: <mailto:nouveau@lists.freedesktop.org>
List-Help: <mailto:nouveau-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/nouveau>,
 <mailto:nouveau-request@lists.freedesktop.org?subject=subscribe>
Reply-To: CACO55tuk4SA6-xUtJ-oRePy8MPXYAp2cfmSPxwW3J5nQuX3y2g@mail.gmail.com
Cc: linux-pm@vger.kernel.org, linux-pci@vger.kernel.org,
 Mika Westerberg <mika.westerberg@intel.com>,
 "Rafael J . Wysocki" <rjw@rjwysocki.net>, dri-devel@lists.freedesktop.org,
 nouveau@lists.freedesktop.org, Bjorn Helgaas <bhelgaas@google.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: nouveau-bounces@lists.freedesktop.org
Sender: "Nouveau" <nouveau-bounces@lists.freedesktop.org>

Rml4ZXMgc3RhdGUgdHJhbnNpdGlvbnMgb2YgTnZpZGlhIFBhc2NhbCBHUFVzIGZyb20gRDNjb2xk
IGludG8gaGlnaGVyIGRldmljZQpzdGF0ZXMuCgp2MjogY29udmVydCB0byBwY2lfZGV2IHF1aXJr
CiAgICBwdXQgYSBwcm9wZXIgdGVjaG5pY2FsIGV4cGxlbmF0aW9uIG9mIHRoZSBpc3N1ZSBhcyBh
IGluLWNvZGUgY29tbWVudAoKUkZDIGNvbW1lbnQgKGNvcGllZCBmcm9tIGxhc3Qgc2VudCk6Cldl
IGFyZSBxdWl0ZSBzdXJlIHRoYXQgdGhlcmUgaXMgYSBoaWdoZXIgYW1vdW50IG9mIGJyaWRnZXMg
YWZmZWN0ZWQgYnkgdGhpcywKYnV0IEkgd2FzIG9ubHkgdGVzdGluZyBpdCBvbiBteSBvd24gbWFj
aGluZSBmb3Igbm93LgoKSSd2ZSBzdHJlc3N0ZXN0ZWQgcnVucG0gYnkgZG9pbmcgNTAwMCBydW5w
bSBjeWNsZXMgd2l0aCB0aGF0IHBhdGNoIGFwcGxpZWQKYW5kIG5ldmVyIHNhdyBpdCBmYWlsLgoK
SSBtYWlubHkgd2FudGVkIHRvIGdldCBhIGRpc2N1c3Npb24gZ29pbmcgb24gaWYgdGhhdCdzIGEg
ZmVhc2FibGUgd29ya2Fyb3VuZAppbmRlZWQgb3IgaWYgd2UgbmVlZCBzb21ldGhpbmcgYmV0dGVy
LgoKSSBhbSBhbHNvIHN1cmUsIHRoYXQgdGhlIG5vdXZlYXUgZHJpdmVyIGl0c2VsZiBpc24ndCBh
dCBmYXVsdCBhcyBJIGFtIGFibGUKdG8gcmVwcm9kdWNlIHRoZSBzYW1lIGlzc3VlIGJ5IHBva2lu
ZyBpbnRvIHNvbWUgUENJIHJlZ2lzdGVycyBvbiB0aGUgUENJZQpicmlkZ2UgdG8gcHV0IHRoZSBH
UFUgaW50byBEM2NvbGQgYXMgaXQncyBkb25lIGluIEFDUEkgY29kZS4KCkkndmUgd3JpdHRlbiBh
IGxpdHRsZSBweXRob24gc2NyaXB0IHRvIHJlcHJvZHVjZSB0aGlzIGlzc3VlIHdpdGhvdXQgdGhl
IG5lZWQKb2YgbG9hZGluZyBub3V2ZWF1OgpodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5j
b20va2Fyb2xoZXJic3QvcGNpLXN0dWItcnVucG0vbWFzdGVyL252X3J1bnBtX2J1Z190ZXN0LnB5
CgpTaWduZWQtb2ZmLWJ5OiBLYXJvbCBIZXJic3QgPGtoZXJic3RAcmVkaGF0LmNvbT4KQ2M6IEJq
b3JuIEhlbGdhYXMgPGJoZWxnYWFzQGdvb2dsZS5jb20+CkNjOiBMeXVkZSBQYXVsIDxseXVkZUBy
ZWRoYXQuY29tPgpDYzogUmFmYWVsIEouIFd5c29ja2kgPHJqd0Byand5c29ja2kubmV0PgpDYzog
TWlrYSBXZXN0ZXJiZXJnIDxtaWthLndlc3RlcmJlcmdAaW50ZWwuY29tPgpDYzogbGludXgtcGNp
QHZnZXIua2VybmVsLm9yZwpDYzogbGludXgtcG1Admdlci5rZXJuZWwub3JnCkNjOiBkcmktZGV2
ZWxAbGlzdHMuZnJlZWRlc2t0b3Aub3JnCkNjOiBub3V2ZWF1QGxpc3RzLmZyZWVkZXNrdG9wLm9y
ZwotLS0KIGRyaXZlcnMvcGNpL3BjaS5jICAgIHwgMTEgKysrKysrKysrKwogZHJpdmVycy9wY2kv
cXVpcmtzLmMgfCA1MCArKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysr
KwogaW5jbHVkZS9saW51eC9wY2kuaCAgfCAgMSArCiAzIGZpbGVzIGNoYW5nZWQsIDYyIGluc2Vy
dGlvbnMoKykKCmRpZmYgLS1naXQgYS9kcml2ZXJzL3BjaS9wY2kuYyBiL2RyaXZlcnMvcGNpL3Bj
aS5jCmluZGV4IDA4OGZjZGM4ZDJiNC4uNjU1MTZiMDI0ZWU1IDEwMDY0NAotLS0gYS9kcml2ZXJz
L3BjaS9wY2kuYworKysgYi9kcml2ZXJzL3BjaS9wY2kuYwpAQCAtNzk5LDYgKzc5OSwxMyBAQCBz
dGF0aWMgaW5saW5lIGJvb2wgcGxhdGZvcm1fcGNpX2JyaWRnZV9kMyhzdHJ1Y3QgcGNpX2RldiAq
ZGV2KQogCXJldHVybiBwY2lfcGxhdGZvcm1fcG0gPyBwY2lfcGxhdGZvcm1fcG0tPmJyaWRnZV9k
MyhkZXYpIDogZmFsc2U7CiB9CiAKK3N0YXRpYyBpbmxpbmUgYm9vbCBwYXJlbnRfYnJva2VuX2No
aWxkX3BtKHN0cnVjdCBwY2lfZGV2ICpkZXYpCit7CisJaWYgKCFkZXYtPmJ1cyB8fCAhZGV2LT5i
dXMtPnNlbGYpCisJCXJldHVybiBmYWxzZTsKKwlyZXR1cm4gZGV2LT5idXMtPnNlbGYtPmJyb2tl
bl9jaGlsZF9wbTsKK30KKwogLyoqCiAgKiBwY2lfcmF3X3NldF9wb3dlcl9zdGF0ZSAtIFVzZSBQ
Q0kgUE0gcmVnaXN0ZXJzIHRvIHNldCB0aGUgcG93ZXIgc3RhdGUgb2YKICAqCQkJICAgICBnaXZl
biBQQ0kgZGV2aWNlCkBAIC04NDQsNiArODUxLDEwIEBAIHN0YXRpYyBpbnQgcGNpX3Jhd19zZXRf
cG93ZXJfc3RhdGUoc3RydWN0IHBjaV9kZXYgKmRldiwgcGNpX3Bvd2VyX3Qgc3RhdGUpCiAJICAg
fHwgKHN0YXRlID09IFBDSV9EMiAmJiAhZGV2LT5kMl9zdXBwb3J0KSkKIAkJcmV0dXJuIC1FSU87
CiAKKwkvKiBjaGVjayBpZiB0aGUgYnVzIGNvbnRyb2xsZXIgY2F1c2VzIGlzc3VlcyAqLworCWlm
IChzdGF0ZSAhPSBQQ0lfRDAgJiYgcGFyZW50X2Jyb2tlbl9jaGlsZF9wbShkZXYpKQorCQlyZXR1
cm4gMDsKKwogCXBjaV9yZWFkX2NvbmZpZ193b3JkKGRldiwgZGV2LT5wbV9jYXAgKyBQQ0lfUE1f
Q1RSTCwgJnBtY3NyKTsKIAogCS8qCmRpZmYgLS1naXQgYS9kcml2ZXJzL3BjaS9xdWlya3MuYyBi
L2RyaXZlcnMvcGNpL3F1aXJrcy5jCmluZGV4IDBmMTZhY2MzMjNjNi4uMmJlMGRlZWMyYzNkIDEw
MDY0NAotLS0gYS9kcml2ZXJzL3BjaS9xdWlya3MuYworKysgYi9kcml2ZXJzL3BjaS9xdWlya3Mu
YwpAQCAtNTE5OCwzICs1MTk4LDUzIEBAIHN0YXRpYyB2b2lkIHF1aXJrX3Jlc2V0X2xlbm92b190
aGlua3BhZF9wNTBfbnZncHUoc3RydWN0IHBjaV9kZXYgKnBkZXYpCiBERUNMQVJFX1BDSV9GSVhV
UF9DTEFTU19GSU5BTChQQ0lfVkVORE9SX0lEX05WSURJQSwgMHgxM2IxLAogCQkJICAgICAgUENJ
X0NMQVNTX0RJU1BMQVlfVkdBLCA4LAogCQkJICAgICAgcXVpcmtfcmVzZXRfbGVub3ZvX3RoaW5r
cGFkX3A1MF9udmdwdSk7CisKKy8qCisgKiBTb21lIEludGVsIFBDSWUgYnJpZGdlcyBjYXVzZSBk
ZXZpY2VzIHRvIGRpc2FwcGVhciBmcm9tIHRoZSBQQ0llIGJ1cyBhZnRlcgorICogdGhvc2Ugd2Vy
ZSBwdXQgaW50byBEM2NvbGQgc3RhdGUgaWYgdGhleSB3ZXJlIHB1dCBpbnRvIGEgbm9uIEQwIFBD
SSBQTQorICogZGV2aWNlIHN0YXRlIGJlZm9yZSBkb2luZyBzby4KKyAqCisgKiBUaGlzIGxlYWRz
IHRvIHZhcmlvdXMgaXNzdWUgZGlmZmVyZW50IGlzc3VlcyB3aGljaCBhbGwgbWFuaWZlc3QgZGlm
ZmVyZW50bHksCisgKiBidXQgaGF2ZSB0aGUgc2FtZSByb290IGNhdXNlOgorICogIC0gQUlNTCBj
b2RlIGV4ZWN1dGlvbiBoaXRzIGFuIGluZmluaXRlIGxvb3AgKGFzIHRoZSBjb2Ugd2FpdHMgb24g
ZGV2aWNlCisgKiAgICBtZW1vcnkgdG8gY2hhbmdlKS4KKyAqICAtIGtlcm5lbCBjcmFzaGVzLCBh
cyBhbGwgcGNpIHJlYWRzIHJldHVybiAtMSwgd2hpY2ggbW9zdCBjb2RlIGlzbid0IGFibGUKKyAq
ICAgIHRvIGhhbmRsZSB3ZWxsIGVub3VnaC4KKyAqICAtIHN1ZGRlbiBzaHV0ZG93bnMsIGFzIHRo
ZSBrZXJuZWwgaWRlbnRpZmllZCBhbiB1bnJlY292ZXJhYmxlIGVycm9yIGFmdGVyCisgKiAgICB1
c2Vyc3BhY2UgdHJpZXMgdG8gYWNjZXNzIHRoZSBHUFUuCisgKgorICogSW4gYWxsIGNhc2VzIGRt
ZXNnIHdpbGwgY29udGFpbiBhdCBsZWFzdCBvbmUgbGluZSBsaWtlIHRoaXM6CisgKiAnbm91dmVh
dSAwMDAwOjAxOjAwLjA6IFJlZnVzZWQgdG8gY2hhbmdlIHBvd2VyIHN0YXRlLCBjdXJyZW50bHkg
aW4gRDMnCisgKiBmb2xsb3dlZCBieSBhIGxvdCBvZiBub3V2ZWF1IHRpbWVvdXRzLgorICoKKyAq
IEFDUEkgY29kZSB3cml0ZXMgYml0IDB4ODAgdG8gdGhlIG5vdCBkb2N1bWVudGVkIFBDSSByZWdp
c3RlciAweDI0OCBvZiB0aGUKKyAqIFBDSWUgYnJpZGdlIGNvbnRyb2xsZXIgaW4gb3JkZXIgdG8g
cG93ZXIgZG93biB0aGUgR1BVLgorICogTm9uZXRoZWxlc3MsIHRoZXJlIGFyZSBvdGhlciBjb2Rl
IHBhdGhzIGluc2lkZSB0aGUgQUNQSSBmaXJtd2FyZSB3aGljaCB1c2UKKyAqIG90aGVyIHJlZ2lz
dGVycywgd2hpY2ggc2VlbSB0byB3b3JrIGZpbmU6CisgKiAgLSAweGJjIGJpdCAweDIwIChwdWJs
aWNseSBhdmFpbGFibGUgZG9jdW1lbnRhdGlvbiBjbGFpbXMgJ3Jlc2VydmVkJykKKyAqICAtIDB4
YjAgYml0IDB4MTAgKGxpbmsgZGlzYWJsZSkKKyAqIENoYW5naW5nIHRoZSBjb25kaXRpb25zIGlu
c2lkZSB0aGUgZmlybXdhcmUgYnkgcG9raW5nIGludG8gdGhlIHJlbGV2YW50CisgKiBhZGRyZXNz
ZXMgZG9lcyByZXNvbHZlIHRoZSBpc3N1ZSwgYnV0IGl0IHNlZW1lZCB0byBiZSBBQ1BJIHByaXZh
dGUgbWVtb3J5CisgKiBhbmQgbm90IGFueSBkZXZpY2UgYWNjZXNzaWJsZSBtZW1vcnkgYXQgYWxs
LCBzbyB0aGVyZSBpcyBubyBwb3J0YWJsZSB3YXkgb2YKKyAqIGNoYW5naW5nIHRoZSBjb25kaXRp
b25zLgorICoKKyAqIFRoZSBvbmx5IHN5c3RlbXMgd2hlcmUgdGhpcyBiZWhhdmlvciBjYW4gYmUg
c2VlbiBhcmUgaHlicmlkIGdyYXBoaWNzIGxhcHRvcHMKKyAqIHdpdGggYSBzZWNvbmRhcnkgTnZp
ZGlhIFBhc2NhbCBHUFUuIEl0IGNhbm5vdCBiZSBydWxlZCBvdXQgdGhhdCB0aGlzIGlzc3VlCisg
KiBvbmx5IG9jY3VycyBpbiBjb21iaW5hdGlvbiB3aXRoIGxpc3RlZCBJbnRlbCBQQ0llIGJyaWRn
ZSBjb250cm9sbGVycyBhbmQKKyAqIHRoZSBtZW50aW9uZWQgR1BVcyBvciBpZiBpdCdzIG9ubHkg
YSBodyBidWcgaW4gdGhlIGJyaWRnZSBjb250cm9sbGVyLgorICoKKyAqIEJ1dCBiZWNhdXNlIHRo
aXMgaXNzdWUgd2FzIE5PVCBzZWVuIG9uIGxhcHRvcHMgd2l0aCBhbiBOdmlkaWEgUGFzY2FsIEdQ
VQorICogYW5kIGFuIEludGVsIENvZmZlZSBMYWtlIFNvQywgdGhlcmUgaXMgYSBoaWdoZXIgY2hh
bmNlIG9mIHRoZXJlIGJlaW5nIGEgYnVnCisgKiBpbiB0aGUgYnJpZGdlIGNvbnRyb2xsZXIgcmF0
aGVyIHRoYW4gaW4gdGhlIEdQVS4KKyAqCisgKiBUaGlzIGlzc3VlIHdhcyBub3QgYWJsZSB0byBi
ZSByZXByb2R1Y2VkIG9uIG5vbiBsYXB0b3Agc3lzdGVtcy4KKyAqLworCitzdGF0aWMgdm9pZCBx
dWlya19icm9rZW5fY2hpbGRfcG0oc3RydWN0IHBjaV9kZXYgKmRldikKK3sKKwlkZXYtPmJyb2tl
bl9jaGlsZF9wbSA9IDE7CisJcHJpbnRrKCJhcHBsaWVkIGJyb2tlbiBjaGlsZCBwbSBxdWlyayFc
biIpOworfQorLyoga2FieSBsYWtlICovCitERUNMQVJFX1BDSV9GSVhVUF9GSU5BTChQQ0lfVkVO
RE9SX0lEX0lOVEVMLCAweDE5MDEsCisJCQlxdWlya19icm9rZW5fY2hpbGRfcG0pOwpkaWZmIC0t
Z2l0IGEvaW5jbHVkZS9saW51eC9wY2kuaCBiL2luY2x1ZGUvbGludXgvcGNpLmgKaW5kZXggZGQ0
MzZkYTdlY2NjLi4wMWViMGE5ZTZjMTMgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvcGNpLmgK
KysrIGIvaW5jbHVkZS9saW51eC9wY2kuaApAQCAtNDEzLDYgKzQxMyw3IEBAIHN0cnVjdCBwY2lf
ZGV2IHsKIAl1bnNpZ25lZCBpbnQJX19hZXJfZmlybXdhcmVfZmlyc3RfdmFsaWQ6MTsKIAl1bnNp
Z25lZCBpbnQJX19hZXJfZmlybXdhcmVfZmlyc3Q6MTsKIAl1bnNpZ25lZCBpbnQJYnJva2VuX2lu
dHhfbWFza2luZzoxOwkvKiBJTlR4IG1hc2tpbmcgY2FuJ3QgYmUgdXNlZCAqLworCXVuc2lnbmVk
IGludAlicm9rZW5fY2hpbGRfcG06MTsJLyogY2hpbGRyZW4gcHV0IGludG8gbG93ZXIgUENJIFBN
IHN0YXRlcyB3b24ndCByZWNvdmVyIGFmdGVyIEQzY29sZCB0cmFuc2l0aW9uICovCiAJdW5zaWdu
ZWQgaW50CWlvX3dpbmRvd18xazoxOwkJLyogSW50ZWwgYnJpZGdlIDFLIEkvTyB3aW5kb3dzICov
CiAJdW5zaWduZWQgaW50CWlycV9tYW5hZ2VkOjE7CiAJdW5zaWduZWQgaW50CWhhc19zZWNvbmRh
cnlfbGluazoxOwotLSAKMi4yMS4wCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fXwpOb3V2ZWF1IG1haWxpbmcgbGlzdApOb3V2ZWF1QGxpc3RzLmZyZWVkZXNr
dG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL25v
dXZlYXU=
