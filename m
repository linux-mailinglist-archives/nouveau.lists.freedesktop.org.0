Return-Path: <nouveau-bounces@lists.freedesktop.org>
X-Original-To: lists+nouveau@lfdr.de
Delivered-To: lists+nouveau@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id 087D0434D7
	for <lists+nouveau@lfdr.de>; Thu, 13 Jun 2019 11:44:10 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 51C1B89875;
	Thu, 13 Jun 2019 09:44:08 +0000 (UTC)
X-Original-To: nouveau@lists.freedesktop.org
Delivered-To: nouveau@lists.freedesktop.org
Received: from bombadil.infradead.org (bombadil.infradead.org
 [IPv6:2607:7c80:54:e::133])
 by gabe.freedesktop.org (Postfix) with ESMTPS id 431B589873;
 Thu, 13 Jun 2019 09:44:07 +0000 (UTC)
Received: from mpp-cp1-natpool-1-198.ethz.ch ([82.130.71.198] helo=localhost)
 by bombadil.infradead.org with esmtpsa (Exim 4.92 #3 (Red Hat Linux))
 id 1hbMH5-0001qr-IT; Thu, 13 Jun 2019 09:44:03 +0000
From: Christoph Hellwig <hch@lst.de>
To: Dan Williams <dan.j.williams@intel.com>,
 =?UTF-8?q?J=C3=A9r=C3=B4me=20Glisse?= <jglisse@redhat.com>,
 Jason Gunthorpe <jgg@mellanox.com>, Ben Skeggs <bskeggs@redhat.com>
Date: Thu, 13 Jun 2019 11:43:15 +0200
Message-Id: <20190613094326.24093-13-hch@lst.de>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190613094326.24093-1-hch@lst.de>
References: <20190613094326.24093-1-hch@lst.de>
MIME-Version: 1.0
X-SRS-Rewrite: SMTP reverse-path rewritten from <hch@infradead.org> by
 bombadil.infradead.org. See http://www.infradead.org/rpr.html
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt;
 c=relaxed/relaxed; 
 d=infradead.org; s=bombadil.20170209; h=Content-Transfer-Encoding:
 MIME-Version:References:In-Reply-To:Message-Id:Date:Subject:Cc:To:From:Sender
 :Reply-To:Content-Type:Content-ID:Content-Description:Resent-Date:Resent-From
 :Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:
 List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
 bh=+F36Qtp9KNZlJRbFfbQN1eq8EHq+227/7sfzGGclHLw=; b=VblDbKsZb0RRpnPdAvevOdbtuG
 06yzYUmtWkiIPsoP1nmvo3AnrsDTuJovv6fNdum1MQwQKL25pb99SXJvc4gW0o62hlT7lLlTc/WjS
 K8qZKqiBN5WxofN6jGW7fAo3QUQf+dfuCfyvrfo4N272eB6mZoLfEfgv+BoGYRDNyl7Vb5xEuzWlM
 N6FMty3/n4xFBrIv2BT8kRH14dLL54XD4q2x0fsA6G1rQEvtBsX62S7CCnV4Mt/JdWcLV2XjWf64q
 xbmSBMtbYVIv7Cq/AJJH58RKU1ONXDRSyMYUcP30T1sQI1wMywIlngAo880SbnoVdXJORn4vkMSFl
 G7SCcZbA==;
Subject: [Nouveau] [PATCH 12/22] memremap: provide an optional internal
 refcount in struct dev_pagemap
X-BeenThere: nouveau@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Nouveau development list <nouveau.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/nouveau>,
 <mailto:nouveau-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/nouveau>
List-Post: <mailto:nouveau@lists.freedesktop.org>
List-Help: <mailto:nouveau-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/nouveau>,
 <mailto:nouveau-request@lists.freedesktop.org?subject=subscribe>
Cc: linux-nvdimm@lists.01.org, linux-pci@vger.kernel.org,
 linux-kernel@vger.kernel.org, dri-devel@lists.freedesktop.org,
 linux-mm@kvack.org, nouveau@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: nouveau-bounces@lists.freedesktop.org
Sender: "Nouveau" <nouveau-bounces@lists.freedesktop.org>

UHJvdmlkZSBhbiBpbnRlcm5hbCByZWZjb3VudGluZyBsb2dpYyBpZiBubyAtPnJlZiBmaWVsZCBp
cyBwcm92aWRlZAppbiB0aGUgcGFnZW1hcCBwYXNzZWQgaW50byBkZXZtX21lbXJlbWFwX3BhZ2Vz
IHNvIHRoYXQgY2FsbGVycyBkb24ndApoYXZlIHRvIHJlaW52ZW50IGl0IHBvb3JseS4KClNpZ25l
ZC1vZmYtYnk6IENocmlzdG9waCBIZWxsd2lnIDxoY2hAbHN0LmRlPgotLS0KIGluY2x1ZGUvbGlu
dXgvbWVtcmVtYXAuaCAgICAgICAgICB8ICA0ICsrKwoga2VybmVsL21lbXJlbWFwLmMgICAgICAg
ICAgICAgICAgIHwgNjAgKysrKysrKysrKysrKysrKysrKysrKysrKystLS0tLQogdG9vbHMvdGVz
dGluZy9udmRpbW0vdGVzdC9pb21hcC5jIHwgIDkgKysrLS0KIDMgZmlsZXMgY2hhbmdlZCwgNjIg
aW5zZXJ0aW9ucygrKSwgMTEgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51
eC9tZW1yZW1hcC5oIGIvaW5jbHVkZS9saW51eC9tZW1yZW1hcC5oCmluZGV4IDc1YjgwZGU2Mzk0
YS4uYjc3ZWQwMDg1MWNlIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L21lbXJlbWFwLmgKKysr
IGIvaW5jbHVkZS9saW51eC9tZW1yZW1hcC5oCkBAIC04OCw2ICs4OCw4IEBAIHN0cnVjdCBkZXZf
cGFnZW1hcF9vcHMgewogICogQGFsdG1hcDogcHJlLWFsbG9jYXRlZC9yZXNlcnZlZCBtZW1vcnkg
Zm9yIHZtZW1tYXAgYWxsb2NhdGlvbnMKICAqIEByZXM6IHBoeXNpY2FsIGFkZHJlc3MgcmFuZ2Ug
Y292ZXJlZCBieSBAcmVmCiAgKiBAcmVmOiByZWZlcmVuY2UgY291bnQgdGhhdCBwaW5zIHRoZSBk
ZXZtX21lbXJlbWFwX3BhZ2VzKCkgbWFwcGluZworICogQGludGVybmFsX3JlZjogaW50ZXJuYWwg
cmVmZXJlbmNlIGlmIEByZWYgaXMgbm90IHByb3ZpZGVkIGJ5IHRoZSBjYWxsZXIKKyAqIEBkb25l
OiBjb21wbGV0aW9uIGZvciBAaW50ZXJuYWxfcmVmCiAgKiBAZGV2OiBob3N0IGRldmljZSBvZiB0
aGUgbWFwcGluZyBmb3IgZGVidWcKICAqIEBkYXRhOiBwcml2YXRlIGRhdGEgcG9pbnRlciBmb3Ig
cGFnZV9mcmVlKCkKICAqIEB0eXBlOiBtZW1vcnkgdHlwZTogc2VlIE1FTU9SWV8qIGluIG1lbW9y
eV9ob3RwbHVnLmgKQEAgLTk4LDYgKzEwMCw4IEBAIHN0cnVjdCBkZXZfcGFnZW1hcCB7CiAJYm9v
bCBhbHRtYXBfdmFsaWQ7CiAJc3RydWN0IHJlc291cmNlIHJlczsKIAlzdHJ1Y3QgcGVyY3B1X3Jl
ZiAqcmVmOworCXN0cnVjdCBwZXJjcHVfcmVmIGludGVybmFsX3JlZjsKKwlzdHJ1Y3QgY29tcGxl
dGlvbiBkb25lOwogCXN0cnVjdCBkZXZpY2UgKmRldjsKIAllbnVtIG1lbW9yeV90eXBlIHR5cGU7
CiAJdTY0IHBjaV9wMnBkbWFfYnVzX29mZnNldDsKZGlmZiAtLWdpdCBhL2tlcm5lbC9tZW1yZW1h
cC5jIGIva2VybmVsL21lbXJlbWFwLmMKaW5kZXggNWM5NGFkNGY1NzgzLi5lZGNhNDM4OWRhNjgg
MTAwNjQ0Ci0tLSBhL2tlcm5lbC9tZW1yZW1hcC5jCisrKyBiL2tlcm5lbC9tZW1yZW1hcC5jCkBA
IC04Myw2ICs4MywxNCBAQCBzdGF0aWMgdW5zaWduZWQgbG9uZyBwZm5fbmV4dCh1bnNpZ25lZCBs
b25nIHBmbikKICNkZWZpbmUgZm9yX2VhY2hfZGV2aWNlX3BmbihwZm4sIG1hcCkgXAogCWZvciAo
cGZuID0gcGZuX2ZpcnN0KG1hcCk7IHBmbiA8IHBmbl9lbmQobWFwKTsgcGZuID0gcGZuX25leHQo
cGZuKSkKIAorc3RhdGljIHZvaWQgZGV2X3BhZ2VtYXBfa2lsbChzdHJ1Y3QgZGV2X3BhZ2VtYXAg
KnBnbWFwKQoreworCWlmIChwZ21hcC0+b3BzICYmIHBnbWFwLT5vcHMtPmtpbGwpCisJCXBnbWFw
LT5vcHMtPmtpbGwocGdtYXApOworCWVsc2UKKwkJcGVyY3B1X3JlZl9raWxsKHBnbWFwLT5yZWYp
OworfQorCiBzdGF0aWMgdm9pZCBkZXZtX21lbXJlbWFwX3BhZ2VzX3JlbGVhc2Uodm9pZCAqZGF0
YSkKIHsKIAlzdHJ1Y3QgZGV2X3BhZ2VtYXAgKnBnbWFwID0gZGF0YTsKQEAgLTkyLDcgKzEwMCw4
IEBAIHN0YXRpYyB2b2lkIGRldm1fbWVtcmVtYXBfcGFnZXNfcmVsZWFzZSh2b2lkICpkYXRhKQog
CXVuc2lnbmVkIGxvbmcgcGZuOwogCWludCBuaWQ7CiAKLQlwZ21hcC0+b3BzLT5raWxsKHBnbWFw
KTsKKwlkZXZfcGFnZW1hcF9raWxsKHBnbWFwKTsKKwogCWZvcl9lYWNoX2RldmljZV9wZm4ocGZu
LCBwZ21hcCkKIAkJcHV0X3BhZ2UocGZuX3RvX3BhZ2UocGZuKSk7CiAKQEAgLTEyMSwyMCArMTMw
LDM3IEBAIHN0YXRpYyB2b2lkIGRldm1fbWVtcmVtYXBfcGFnZXNfcmVsZWFzZSh2b2lkICpkYXRh
KQogCQkgICAgICAiJXM6IGZhaWxlZCB0byBmcmVlIGFsbCByZXNlcnZlZCBwYWdlc1xuIiwgX19m
dW5jX18pOwogfQogCitzdGF0aWMgdm9pZCBkZXZfcGFnZW1hcF9wZXJjcHVfcmVsZWFzZShzdHJ1
Y3QgcGVyY3B1X3JlZiAqcmVmKQoreworCXN0cnVjdCBkZXZfcGFnZW1hcCAqcGdtYXAgPQorCQlj
b250YWluZXJfb2YocmVmLCBzdHJ1Y3QgZGV2X3BhZ2VtYXAsIGludGVybmFsX3JlZik7CisKKwlj
b21wbGV0ZSgmcGdtYXAtPmRvbmUpOworfQorCitzdGF0aWMgdm9pZCBkZXZfcGFnZW1hcF9wZXJj
cHVfZXhpdCh2b2lkICpkYXRhKQoreworCXN0cnVjdCBkZXZfcGFnZW1hcCAqcGdtYXAgPSBkYXRh
OworCisJd2FpdF9mb3JfY29tcGxldGlvbigmcGdtYXAtPmRvbmUpOworCXBlcmNwdV9yZWZfZXhp
dChwZ21hcC0+cmVmKTsKK30KKwogLyoqCiAgKiBkZXZtX21lbXJlbWFwX3BhZ2VzIC0gcmVtYXAg
YW5kIHByb3ZpZGUgbWVtbWFwIGJhY2tpbmcgZm9yIHRoZSBnaXZlbiByZXNvdXJjZQogICogQGRl
djogaG9zdGluZyBkZXZpY2UgZm9yIEByZXMKICAqIEBwZ21hcDogcG9pbnRlciB0byBhIHN0cnVj
dCBkZXZfcGFnZW1hcAogICoKICAqIE5vdGVzOgotICogMS8gQXQgYSBtaW5pbXVtIHRoZSByZXMs
IHJlZiBhbmQgdHlwZSBhbmQgb3BzIG1lbWJlcnMgb2YgQHBnbWFwIG11c3QgYmUKLSAqICAgIGlu
aXRpYWxpemVkIGJ5IHRoZSBjYWxsZXIgYmVmb3JlIHBhc3NpbmcgaXQgdG8gdGhpcyBmdW5jdGlv
bgorICogMS8gQXQgYSBtaW5pbXVtIHRoZSByZXMgYW5kIHR5cGUgbWVtYmVycyBvZiBAcGdtYXAg
bXVzdCBiZSBpbml0aWFsaXplZAorICogICAgYnkgdGhlIGNhbGxlciBiZWZvcmUgcGFzc2luZyBp
dCB0byB0aGlzIGZ1bmN0aW9uCiAgKgogICogMi8gVGhlIGFsdG1hcCBmaWVsZCBtYXkgb3B0aW9u
YWxseSBiZSBpbml0aWFsaXplZCwgaW4gd2hpY2ggY2FzZSBhbHRtYXBfdmFsaWQKICAqICAgIG11
c3QgYmUgc2V0IHRvIHRydWUKICAqCi0gKiAzLyBwZ21hcC0+cmVmIG11c3QgYmUgJ2xpdmUnIG9u
IGVudHJ5IGFuZCB3aWxsIGJlIGtpbGxlZCBhdAotICogICAgZGV2bV9tZW1yZW1hcF9wYWdlc19y
ZWxlYXNlKCkgdGltZSwgb3IgaWYgdGhpcyByb3V0aW5lIGZhaWxzLgorICogMy8gVGhlIHJlZiBm
aWVsZCBtYXkgb3B0aW9uYWxseSBiZSBwcm92aWRlZCwgaW4gd2hpY2ggcGdtYXAtPnJlZiBtdXN0
IGJlCisgKiAgICAnbGl2ZScgb24gZW50cnkgYW5kIHdpbGwgYmUga2lsbGVkIGF0IGRldm1fbWVt
cmVtYXBfcGFnZXNfcmVsZWFzZSgpIHRpbWUsCisgKiAgICBvciBpZiB0aGlzIHJvdXRpbmUgZmFp
bHMuCiAgKgogICogNC8gcmVzIGlzIGV4cGVjdGVkIHRvIGJlIGEgaG9zdCBtZW1vcnkgcmFuZ2Ug
dGhhdCBjb3VsZCBmZWFzaWJseSBiZQogICogICAgdHJlYXRlZCBhcyBhICJTeXN0ZW0gUkFNIiBy
YW5nZSwgaS5lLiBub3QgYSBkZXZpY2UgbW1pbyByYW5nZSwgYnV0CkBAIC0xNTYsMTAgKzE4Miwy
NiBAQCB2b2lkICpkZXZtX21lbXJlbWFwX3BhZ2VzKHN0cnVjdCBkZXZpY2UgKmRldiwgc3RydWN0
IGRldl9wYWdlbWFwICpwZ21hcCkKIAlwZ3Byb3RfdCBwZ3Byb3QgPSBQQUdFX0tFUk5FTDsKIAlp
bnQgZXJyb3IsIG5pZCwgaXNfcmFtOwogCi0JaWYgKCFwZ21hcC0+cmVmIHx8ICFwZ21hcC0+b3Bz
IHx8ICFwZ21hcC0+b3BzLT5raWxsKQotCQlyZXR1cm4gRVJSX1BUUigtRUlOVkFMKTsKKwlpZiAo
IXBnbWFwLT5yZWYpIHsKKwkJaWYgKHBnbWFwLT5vcHMgJiYgcGdtYXAtPm9wcy0+a2lsbCkKKwkJ
CXJldHVybiBFUlJfUFRSKC1FSU5WQUwpOworCisJCWluaXRfY29tcGxldGlvbigmcGdtYXAtPmRv
bmUpOworCQllcnJvciA9IHBlcmNwdV9yZWZfaW5pdCgmcGdtYXAtPmludGVybmFsX3JlZiwKKwkJ
CQlkZXZfcGFnZW1hcF9wZXJjcHVfcmVsZWFzZSwgMCwgR0ZQX0tFUk5FTCk7CisJCWlmIChlcnJv
cikKKwkJCXJldHVybiBFUlJfUFRSKGVycm9yKTsKKwkJcGdtYXAtPnJlZiA9ICZwZ21hcC0+aW50
ZXJuYWxfcmVmOworCQllcnJvciA9IGRldm1fYWRkX2FjdGlvbl9vcl9yZXNldChkZXYsIGRldl9w
YWdlbWFwX3BlcmNwdV9leGl0LAorCQkJCXBnbWFwKTsKKwkJaWYgKGVycm9yKQorCQkJcmV0dXJu
IEVSUl9QVFIoZXJyb3IpOworCX0gZWxzZSB7CisJCWlmICghcGdtYXAtPm9wcyB8fCAhcGdtYXAt
Pm9wcy0+a2lsbCkKKwkJCXJldHVybiBFUlJfUFRSKC1FSU5WQUwpOworCX0KIAotCWlmIChwZ21h
cC0+b3BzLT5wYWdlX2ZyZWUpIHsKKwlpZiAocGdtYXAtPm9wcyAmJiBwZ21hcC0+b3BzLT5wYWdl
X2ZyZWUpIHsKIAkJZXJyb3IgPSBkZXZfcGFnZW1hcF9lbmFibGUoZGV2KTsKIAkJaWYgKGVycm9y
KQogCQkJcmV0dXJuIEVSUl9QVFIoZXJyb3IpOwpAQCAtMjcyLDcgKzMxNCw3IEBAIHZvaWQgKmRl
dm1fbWVtcmVtYXBfcGFnZXMoc3RydWN0IGRldmljZSAqZGV2LCBzdHJ1Y3QgZGV2X3BhZ2VtYXAg
KnBnbWFwKQogIGVycl9wZm5fcmVtYXA6CiAJcGdtYXBfYXJyYXlfZGVsZXRlKHJlcyk7CiAgZXJy
X2FycmF5OgotCXBnbWFwLT5vcHMtPmtpbGwocGdtYXApOworCWRldl9wYWdlbWFwX2tpbGwocGdt
YXApOwogCXJldHVybiBFUlJfUFRSKGVycm9yKTsKIH0KIEVYUE9SVF9TWU1CT0xfR1BMKGRldm1f
bWVtcmVtYXBfcGFnZXMpOwpkaWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGluZy9udmRpbW0vdGVzdC9p
b21hcC5jIGIvdG9vbHMvdGVzdGluZy9udmRpbW0vdGVzdC9pb21hcC5jCmluZGV4IGVlMDdjNGRl
MmIzNS4uM2QwZTkxNmY5ZmZmIDEwMDY0NAotLS0gYS90b29scy90ZXN0aW5nL252ZGltbS90ZXN0
L2lvbWFwLmMKKysrIGIvdG9vbHMvdGVzdGluZy9udmRpbW0vdGVzdC9pb21hcC5jCkBAIC0xMDQs
OSArMTA0LDE0IEBAIHZvaWQgKl9fd3JhcF9kZXZtX21lbXJlbWFwKHN0cnVjdCBkZXZpY2UgKmRl
diwgcmVzb3VyY2Vfc2l6ZV90IG9mZnNldCwKIH0KIEVYUE9SVF9TWU1CT0woX193cmFwX2Rldm1f
bWVtcmVtYXApOwogCi1zdGF0aWMgdm9pZCBuZml0X3Rlc3Rfa2lsbCh2b2lkICpwZ21hcCkKK3N0
YXRpYyB2b2lkIG5maXRfdGVzdF9raWxsKHZvaWQgKmRhdGEpCiB7Ci0JcGdtYXAtPm9wcy0+a2ls
bChwZ21hcCk7CisJc3RydWN0IGRldl9wYWdlbWFwICpwZ21hcCA9IGRhdGE7CisKKwlpZiAocGdt
YXAtPm9wcyAmJiBwZ21hcC0+b3BzLT5raWxsKQorCQlwZ21hcC0+b3BzLT5raWxsKHBnbWFwKTsK
KwllbHNlCisJCXBlcmNwdV9yZWZfa2lsbChwZ21hcC0+cmVmKTsKIH0KIAogdm9pZCAqX193cmFw
X2Rldm1fbWVtcmVtYXBfcGFnZXMoc3RydWN0IGRldmljZSAqZGV2LCBzdHJ1Y3QgZGV2X3BhZ2Vt
YXAgKnBnbWFwKQotLSAKMi4yMC4xCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fXwpOb3V2ZWF1IG1haWxpbmcgbGlzdApOb3V2ZWF1QGxpc3RzLmZyZWVkZXNr
dG9wLm9yZwpodHRwczovL2xpc3RzLmZyZWVkZXNrdG9wLm9yZy9tYWlsbWFuL2xpc3RpbmZvL25v
dXZlYXU=
