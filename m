Return-Path: <nouveau-bounces@lists.freedesktop.org>
X-Original-To: lists+nouveau@lfdr.de
Delivered-To: lists+nouveau@lfdr.de
Received: from gabe.freedesktop.org (gabe.freedesktop.org [131.252.210.177])
	by mail.lfdr.de (Postfix) with ESMTPS id BD864568E5
	for <lists+nouveau@lfdr.de>; Wed, 26 Jun 2019 14:28:05 +0200 (CEST)
Received: from gabe.freedesktop.org (localhost [127.0.0.1])
	by gabe.freedesktop.org (Postfix) with ESMTP id 3A6716E3E7;
	Wed, 26 Jun 2019 12:28:04 +0000 (UTC)
X-Original-To: nouveau@lists.freedesktop.org
Delivered-To: nouveau@lists.freedesktop.org
Received: from bombadil.infradead.org (bombadil.infradead.org
 [IPv6:2607:7c80:54:e::133])
 by gabe.freedesktop.org (Postfix) with ESMTPS id B6A8F6E3E9;
 Wed, 26 Jun 2019 12:28:02 +0000 (UTC)
Received: from clnet-p19-102.ikbnet.co.at ([83.175.77.102] helo=localhost)
 by bombadil.infradead.org with esmtpsa (Exim 4.92 #3 (Red Hat Linux))
 id 1hg71q-0001T6-VB; Wed, 26 Jun 2019 12:27:59 +0000
From: Christoph Hellwig <hch@lst.de>
To: Dan Williams <dan.j.williams@intel.com>,
 =?UTF-8?q?J=C3=A9r=C3=B4me=20Glisse?= <jglisse@redhat.com>,
 Jason Gunthorpe <jgg@mellanox.com>, Ben Skeggs <bskeggs@redhat.com>
Date: Wed, 26 Jun 2019 14:27:11 +0200
Message-Id: <20190626122724.13313-13-hch@lst.de>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190626122724.13313-1-hch@lst.de>
References: <20190626122724.13313-1-hch@lst.de>
MIME-Version: 1.0
X-SRS-Rewrite: SMTP reverse-path rewritten from <hch@infradead.org> by
 bombadil.infradead.org. See http://www.infradead.org/rpr.html
X-Mailman-Original-DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt;
 c=relaxed/relaxed; 
 d=infradead.org; s=bombadil.20170209; h=Content-Transfer-Encoding:
 MIME-Version:References:In-Reply-To:Message-Id:Date:Subject:Cc:To:From:Sender
 :Reply-To:Content-Type:Content-ID:Content-Description:Resent-Date:Resent-From
 :Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:List-Id:List-Help:
 List-Unsubscribe:List-Subscribe:List-Post:List-Owner:List-Archive;
 bh=eSi3S2UCkxhmCBrnGHmtw81ZNxp9oxJ8kWoR9DuGVFo=; b=VAr9mXfz7cA+wOHeq9MHRYNO/Z
 Tw/udMQowLV+trSw45gnqEt0HZNhWG7lVgavlyWH7jsxvhGv9JgYvbk4lz7GD2//xNo/lo8m5agAs
 GxbGTWyz4pMQYv0hMGA19IuNlfi5HbAxp8MprYgFCBettSw3l032ywNQ0jbdWLeDaKHaJvhULeKQT
 YE6yKAU+ZSd0HR+Jw67bWZty6cwjOAyK2xSnjiJD5uG7aol2AxKoP2n3PoM6gDA2aswJclMgxpg87
 4+Uygu7KZHfUC/zlgwWL5vJgddLEwVi4vJPg1q+Mz7uahZKqAZw4H1L+/SVnzz4/d8xL31Zgdt49k
 cHkty14w==;
Subject: [Nouveau] [PATCH 12/25] memremap: add a migrate_to_ram method to
 struct dev_pagemap_ops
X-BeenThere: nouveau@lists.freedesktop.org
X-Mailman-Version: 2.1.23
Precedence: list
List-Id: Nouveau development list <nouveau.lists.freedesktop.org>
List-Unsubscribe: <https://lists.freedesktop.org/mailman/options/nouveau>,
 <mailto:nouveau-request@lists.freedesktop.org?subject=unsubscribe>
List-Archive: <https://lists.freedesktop.org/archives/nouveau>
List-Post: <mailto:nouveau@lists.freedesktop.org>
List-Help: <mailto:nouveau-request@lists.freedesktop.org?subject=help>
List-Subscribe: <https://lists.freedesktop.org/mailman/listinfo/nouveau>,
 <mailto:nouveau-request@lists.freedesktop.org?subject=subscribe>
Cc: Ralph Campbell <rcampbell@nvidia.com>, linux-nvdimm@lists.01.org,
 linux-pci@vger.kernel.org, linux-kernel@vger.kernel.org,
 dri-devel@lists.freedesktop.org, linux-mm@kvack.org,
 nouveau@lists.freedesktop.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: nouveau-bounces@lists.freedesktop.org
Sender: "Nouveau" <nouveau-bounces@lists.freedesktop.org>

VGhpcyByZXBsYWNlcyB0aGUgaGFja3kgLT5mYXVsdCBjYWxsYmFjaywgd2hpY2ggaXMgY3VycmVu
dGx5IGRpcmVjdGx5CmNhbGxlZCBmcm9tIGNvbW1vbiBjb2RlIHRocm91Z2ggYSBobW0gc3BlY2lm
aWMgZGF0YSBzdHJ1Y3R1cmUgYXMgYW4KZXhlcmNpc2UgaW4gbGF5ZXJpbmcgdmlvbGF0aW9ucy4K
ClNpZ25lZC1vZmYtYnk6IENocmlzdG9waCBIZWxsd2lnIDxoY2hAbHN0LmRlPgpSZXZpZXdlZC1i
eTogUmFscGggQ2FtcGJlbGwgPHJjYW1wYmVsbEBudmlkaWEuY29tPgotLS0KIGluY2x1ZGUvbGlu
dXgvaG1tLmggICAgICB8ICA2IC0tLS0tLQogaW5jbHVkZS9saW51eC9tZW1yZW1hcC5oIHwgIDYg
KysrKysrCiBpbmNsdWRlL2xpbnV4L3N3YXBvcHMuaCAgfCAxNSAtLS0tLS0tLS0tLS0tLS0KIGtl
cm5lbC9tZW1yZW1hcC5jICAgICAgICB8IDM1ICsrKystLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tCiBtbS9obW0uYyAgICAgICAgICAgICAgICAgfCAxMyArKysrKy0tLS0tLS0tCiBtbS9t
ZW1vcnkuYyAgICAgICAgICAgICAgfCAgOSArKy0tLS0tLS0KIDYgZmlsZXMgY2hhbmdlZCwgMTcg
aW5zZXJ0aW9ucygrKSwgNjcgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51
eC9obW0uaCBiL2luY2x1ZGUvbGludXgvaG1tLmgKaW5kZXggNDRhNWFjNzM4YmI1Li5iYTE5YzE5
ZTI0ZWQgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgvaG1tLmgKKysrIGIvaW5jbHVkZS9saW51
eC9obW0uaApAQCAtNjkyLDExICs2OTIsNiBAQCBzdHJ1Y3QgaG1tX2Rldm1lbV9vcHMgewogICog
Y2h1bmssIGFzIGFuIG9wdGltaXphdGlvbi4gSXQgbXVzdCwgaG93ZXZlciwgcHJpb3JpdGl6ZSB0
aGUgZmF1bHRpbmcgYWRkcmVzcwogICogb3ZlciBhbGwgdGhlIG90aGVycy4KICAqLwotdHlwZWRl
ZiB2bV9mYXVsdF90ICgqZGV2X3BhZ2VfZmF1bHRfdCkoc3RydWN0IHZtX2FyZWFfc3RydWN0ICp2
bWEsCi0JCQkJdW5zaWduZWQgbG9uZyBhZGRyLAotCQkJCWNvbnN0IHN0cnVjdCBwYWdlICpwYWdl
LAotCQkJCXVuc2lnbmVkIGludCBmbGFncywKLQkJCQlwbWRfdCAqcG1kcCk7CiAKIHN0cnVjdCBo
bW1fZGV2bWVtIHsKIAlzdHJ1Y3QgY29tcGxldGlvbgkJY29tcGxldGlvbjsKQEAgLTcwNyw3ICs3
MDIsNiBAQCBzdHJ1Y3QgaG1tX2Rldm1lbSB7CiAJc3RydWN0IGRldl9wYWdlbWFwCQlwYWdlbWFw
OwogCWNvbnN0IHN0cnVjdCBobW1fZGV2bWVtX29wcwkqb3BzOwogCXN0cnVjdCBwZXJjcHVfcmVm
CQlyZWY7Ci0JZGV2X3BhZ2VfZmF1bHRfdAkJcGFnZV9mYXVsdDsKIH07CiAKIC8qCmRpZmYgLS1n
aXQgYS9pbmNsdWRlL2xpbnV4L21lbXJlbWFwLmggYi9pbmNsdWRlL2xpbnV4L21lbXJlbWFwLmgK
aW5kZXggYjg2NjZhMGQ4NjY1Li5hYzk4NWJkMDNhN2YgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGlu
dXgvbWVtcmVtYXAuaAorKysgYi9pbmNsdWRlL2xpbnV4L21lbXJlbWFwLmgKQEAgLTgwLDYgKzgw
LDEyIEBAIHN0cnVjdCBkZXZfcGFnZW1hcF9vcHMgewogCSAqIFdhaXQgZm9yIHJlZmNvdW50IGlu
IHN0cnVjdCBkZXZfcGFnZW1hcCB0byBiZSBpZGxlIGFuZCByZWFwIGl0LgogCSAqLwogCXZvaWQg
KCpjbGVhbnVwKShzdHJ1Y3QgZGV2X3BhZ2VtYXAgKnBnbWFwKTsKKworCS8qCisJICogVXNlZCBm
b3IgcHJpdmF0ZSAodW4tYWRkcmVzc2FibGUpIGRldmljZSBtZW1vcnkgb25seS4gIE11c3QgbWln
cmF0ZQorCSAqIHRoZSBwYWdlIGJhY2sgdG8gYSBDUFUgYWNjZXNzaWJsZSBwYWdlLgorCSAqLwor
CXZtX2ZhdWx0X3QgKCptaWdyYXRlX3RvX3JhbSkoc3RydWN0IHZtX2ZhdWx0ICp2bWYpOwogfTsK
IAogLyoqCmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L3N3YXBvcHMuaCBiL2luY2x1ZGUvbGlu
dXgvc3dhcG9wcy5oCmluZGV4IDRkOTYxNjY4ZTVmYy4uMTViZGI2ZmU3MWU1IDEwMDY0NAotLS0g
YS9pbmNsdWRlL2xpbnV4L3N3YXBvcHMuaAorKysgYi9pbmNsdWRlL2xpbnV4L3N3YXBvcHMuaApA
QCAtMTI5LDEyICsxMjksNiBAQCBzdGF0aWMgaW5saW5lIHN0cnVjdCBwYWdlICpkZXZpY2VfcHJp
dmF0ZV9lbnRyeV90b19wYWdlKHN3cF9lbnRyeV90IGVudHJ5KQogewogCXJldHVybiBwZm5fdG9f
cGFnZShzd3Bfb2Zmc2V0KGVudHJ5KSk7CiB9Ci0KLXZtX2ZhdWx0X3QgZGV2aWNlX3ByaXZhdGVf
ZW50cnlfZmF1bHQoc3RydWN0IHZtX2FyZWFfc3RydWN0ICp2bWEsCi0JCSAgICAgICB1bnNpZ25l
ZCBsb25nIGFkZHIsCi0JCSAgICAgICBzd3BfZW50cnlfdCBlbnRyeSwKLQkJICAgICAgIHVuc2ln
bmVkIGludCBmbGFncywKLQkJICAgICAgIHBtZF90ICpwbWRwKTsKICNlbHNlIC8qIENPTkZJR19E
RVZJQ0VfUFJJVkFURSAqLwogc3RhdGljIGlubGluZSBzd3BfZW50cnlfdCBtYWtlX2RldmljZV9w
cml2YXRlX2VudHJ5KHN0cnVjdCBwYWdlICpwYWdlLCBib29sIHdyaXRlKQogewpAQCAtMTY0LDE1
ICsxNTgsNiBAQCBzdGF0aWMgaW5saW5lIHN0cnVjdCBwYWdlICpkZXZpY2VfcHJpdmF0ZV9lbnRy
eV90b19wYWdlKHN3cF9lbnRyeV90IGVudHJ5KQogewogCXJldHVybiBOVUxMOwogfQotCi1zdGF0
aWMgaW5saW5lIHZtX2ZhdWx0X3QgZGV2aWNlX3ByaXZhdGVfZW50cnlfZmF1bHQoc3RydWN0IHZt
X2FyZWFfc3RydWN0ICp2bWEsCi0JCQkJICAgICB1bnNpZ25lZCBsb25nIGFkZHIsCi0JCQkJICAg
ICBzd3BfZW50cnlfdCBlbnRyeSwKLQkJCQkgICAgIHVuc2lnbmVkIGludCBmbGFncywKLQkJCQkg
ICAgIHBtZF90ICpwbWRwKQotewotCXJldHVybiBWTV9GQVVMVF9TSUdCVVM7Ci19CiAjZW5kaWYg
LyogQ09ORklHX0RFVklDRV9QUklWQVRFICovCiAKICNpZmRlZiBDT05GSUdfTUlHUkFUSU9OCmRp
ZmYgLS1naXQgYS9rZXJuZWwvbWVtcmVtYXAuYyBiL2tlcm5lbC9tZW1yZW1hcC5jCmluZGV4IDMy
MTlhNGM5MWQwNy4uYzA2YTU0ODdkZGE3IDEwMDY0NAotLS0gYS9rZXJuZWwvbWVtcmVtYXAuYwor
KysgYi9rZXJuZWwvbWVtcmVtYXAuYwpAQCAtMTEsNyArMTEsNiBAQAogI2luY2x1ZGUgPGxpbnV4
L3R5cGVzLmg+CiAjaW5jbHVkZSA8bGludXgvd2FpdF9iaXQuaD4KICNpbmNsdWRlIDxsaW51eC94
YXJyYXkuaD4KLSNpbmNsdWRlIDxsaW51eC9obW0uaD4KIAogc3RhdGljIERFRklORV9YQVJSQVko
cGdtYXBfYXJyYXkpOwogI2RlZmluZSBTRUNUSU9OX01BU0sgfigoMVVMIDw8IFBBX1NFQ1RJT05f
U0hJRlQpIC0gMSkKQEAgLTQ2LDM2ICs0NSw2IEBAIHN0YXRpYyBpbnQgZGV2bWFwX21hbmFnZWRf
ZW5hYmxlX2dldChzdHJ1Y3QgZGV2aWNlICpkZXYsIHN0cnVjdCBkZXZfcGFnZW1hcCAqcGdtCiB9
CiAjZW5kaWYgLyogQ09ORklHX0RFVl9QQUdFTUFQX09QUyAqLwogCi0jaWYgSVNfRU5BQkxFRChD
T05GSUdfREVWSUNFX1BSSVZBVEUpCi12bV9mYXVsdF90IGRldmljZV9wcml2YXRlX2VudHJ5X2Zh
dWx0KHN0cnVjdCB2bV9hcmVhX3N0cnVjdCAqdm1hLAotCQkgICAgICAgdW5zaWduZWQgbG9uZyBh
ZGRyLAotCQkgICAgICAgc3dwX2VudHJ5X3QgZW50cnksCi0JCSAgICAgICB1bnNpZ25lZCBpbnQg
ZmxhZ3MsCi0JCSAgICAgICBwbWRfdCAqcG1kcCkKLXsKLQlzdHJ1Y3QgcGFnZSAqcGFnZSA9IGRl
dmljZV9wcml2YXRlX2VudHJ5X3RvX3BhZ2UoZW50cnkpOwotCXN0cnVjdCBobW1fZGV2bWVtICpk
ZXZtZW07Ci0KLQlkZXZtZW0gPSBjb250YWluZXJfb2YocGFnZS0+cGdtYXAsIHR5cGVvZigqZGV2
bWVtKSwgcGFnZW1hcCk7Ci0KLQkvKgotCSAqIFRoZSBwYWdlX2ZhdWx0KCkgY2FsbGJhY2sgbXVz
dCBtaWdyYXRlIHBhZ2UgYmFjayB0byBzeXN0ZW0gbWVtb3J5Ci0JICogc28gdGhhdCBDUFUgY2Fu
IGFjY2VzcyBpdC4gVGhpcyBtaWdodCBmYWlsIGZvciB2YXJpb3VzIHJlYXNvbnMKLQkgKiAoZGV2
aWNlIGlzc3VlLCBkZXZpY2Ugd2FzIHVuc2FmZWx5IHVucGx1Z2dlZCwgLi4uKS4gV2hlbiBzdWNo
Ci0JICogZXJyb3IgY29uZGl0aW9ucyBoYXBwZW4sIHRoZSBjYWxsYmFjayBtdXN0IHJldHVybiBW
TV9GQVVMVF9TSUdCVVMuCi0JICoKLQkgKiBOb3RlIHRoYXQgYmVjYXVzZSBtZW1vcnkgY2dyb3Vw
IGNoYXJnZXMgYXJlIGFjY291bnRlZCB0byB0aGUgZGV2aWNlCi0JICogbWVtb3J5LCB0aGlzIHNo
b3VsZCBuZXZlciBmYWlsIGJlY2F1c2Ugb2YgbWVtb3J5IHJlc3RyaWN0aW9ucyAoYnV0Ci0JICog
YWxsb2NhdGlvbiBvZiByZWd1bGFyIHN5c3RlbSBwYWdlIG1pZ2h0IHN0aWxsIGZhaWwgYmVjYXVz
ZSB3ZSBhcmUKLQkgKiBvdXQgb2YgbWVtb3J5KS4KLQkgKgotCSAqIFRoZXJlIGlzIGEgbW9yZSBp
bi1kZXB0aCBkZXNjcmlwdGlvbiBvZiB3aGF0IHRoYXQgY2FsbGJhY2sgY2FuIGFuZAotCSAqIGNh
bm5vdCBkbywgaW4gaW5jbHVkZS9saW51eC9tZW1yZW1hcC5oCi0JICovCi0JcmV0dXJuIGRldm1l
bS0+cGFnZV9mYXVsdCh2bWEsIGFkZHIsIHBhZ2UsIGZsYWdzLCBwbWRwKTsKLX0KLSNlbmRpZiAv
KiBDT05GSUdfREVWSUNFX1BSSVZBVEUgKi8KLQogc3RhdGljIHZvaWQgcGdtYXBfYXJyYXlfZGVs
ZXRlKHN0cnVjdCByZXNvdXJjZSAqcmVzKQogewogCXhhX3N0b3JlX3JhbmdlKCZwZ21hcF9hcnJh
eSwgUEhZU19QRk4ocmVzLT5zdGFydCksIFBIWVNfUEZOKHJlcy0+ZW5kKSwKQEAgLTE5Myw2ICsx
NjIsMTAgQEAgdm9pZCAqZGV2bV9tZW1yZW1hcF9wYWdlcyhzdHJ1Y3QgZGV2aWNlICpkZXYsIHN0
cnVjdCBkZXZfcGFnZW1hcCAqcGdtYXApCiAJCQlXQVJOKDEsICJEZXZpY2UgcHJpdmF0ZSBtZW1v
cnkgbm90IHN1cHBvcnRlZFxuIik7CiAJCQlyZXR1cm4gRVJSX1BUUigtRUlOVkFMKTsKIAkJfQor
CQlpZiAoIXBnbWFwLT5vcHMgfHwgIXBnbWFwLT5vcHMtPm1pZ3JhdGVfdG9fcmFtKSB7CisJCQlX
QVJOKDEsICJNaXNzaW5nIG1pZ3JhdGVfdG9fcmFtIG1ldGhvZFxuIik7CisJCQlyZXR1cm4gRVJS
X1BUUigtRUlOVkFMKTsKKwkJfQogCQlicmVhazsKIAljYXNlIE1FTU9SWV9ERVZJQ0VfRlNfREFY
OgogCQlpZiAoIUlTX0VOQUJMRUQoQ09ORklHX1pPTkVfREVWSUNFKSB8fApkaWZmIC0tZ2l0IGEv
bW0vaG1tLmMgYi9tbS9obW0uYwppbmRleCA1YjBiZDVmNmE3NGYuLjk2NjMzZWUwNjZkOCAxMDA2
NDQKLS0tIGEvbW0vaG1tLmMKKysrIGIvbW0vaG1tLmMKQEAgLTEzNjYsMTUgKzEzNjYsMTIgQEAg
c3RhdGljIHZvaWQgaG1tX2Rldm1lbV9yZWZfa2lsbChzdHJ1Y3QgZGV2X3BhZ2VtYXAgKnBnbWFw
KQogCXBlcmNwdV9yZWZfa2lsbChwZ21hcC0+cmVmKTsKIH0KIAotc3RhdGljIHZtX2ZhdWx0X3Qg
aG1tX2Rldm1lbV9mYXVsdChzdHJ1Y3Qgdm1fYXJlYV9zdHJ1Y3QgKnZtYSwKLQkJCSAgICB1bnNp
Z25lZCBsb25nIGFkZHIsCi0JCQkgICAgY29uc3Qgc3RydWN0IHBhZ2UgKnBhZ2UsCi0JCQkgICAg
dW5zaWduZWQgaW50IGZsYWdzLAotCQkJICAgIHBtZF90ICpwbWRwKQorc3RhdGljIHZtX2ZhdWx0
X3QgaG1tX2Rldm1lbV9taWdyYXRlX3RvX3JhbShzdHJ1Y3Qgdm1fZmF1bHQgKnZtZikKIHsKLQlz
dHJ1Y3QgaG1tX2Rldm1lbSAqZGV2bWVtID0gcGFnZS0+cGdtYXAtPmRhdGE7CisJc3RydWN0IGht
bV9kZXZtZW0gKmRldm1lbSA9IHZtZi0+cGFnZS0+cGdtYXAtPmRhdGE7CiAKLQlyZXR1cm4gZGV2
bWVtLT5vcHMtPmZhdWx0KGRldm1lbSwgdm1hLCBhZGRyLCBwYWdlLCBmbGFncywgcG1kcCk7CisJ
cmV0dXJuIGRldm1lbS0+b3BzLT5mYXVsdChkZXZtZW0sIHZtZi0+dm1hLCB2bWYtPmFkZHJlc3Ms
IHZtZi0+cGFnZSwKKwkJCXZtZi0+ZmxhZ3MsIHZtZi0+cG1kKTsKIH0KIAogc3RhdGljIHZvaWQg
aG1tX2Rldm1lbV9mcmVlKHN0cnVjdCBwYWdlICpwYWdlLCB2b2lkICpkYXRhKQpAQCAtMTM4OCw2
ICsxMzg1LDcgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBkZXZfcGFnZW1hcF9vcHMgaG1tX3BhZ2Vt
YXBfb3BzID0gewogCS5wYWdlX2ZyZWUJCT0gaG1tX2Rldm1lbV9mcmVlLAogCS5raWxsCQkJPSBo
bW1fZGV2bWVtX3JlZl9raWxsLAogCS5jbGVhbnVwCQk9IGhtbV9kZXZtZW1fcmVmX2V4aXQsCisJ
Lm1pZ3JhdGVfdG9fcmFtCQk9IGhtbV9kZXZtZW1fbWlncmF0ZV90b19yYW0sCiB9OwogCiAvKgpA
QCAtMTQzOCw3ICsxNDM2LDYgQEAgc3RydWN0IGhtbV9kZXZtZW0gKmhtbV9kZXZtZW1fYWRkKGNv
bnN0IHN0cnVjdCBobW1fZGV2bWVtX29wcyAqb3BzLAogCWRldm1lbS0+cGZuX2ZpcnN0ID0gZGV2
bWVtLT5yZXNvdXJjZS0+c3RhcnQgPj4gUEFHRV9TSElGVDsKIAlkZXZtZW0tPnBmbl9sYXN0ID0g
ZGV2bWVtLT5wZm5fZmlyc3QgKwogCQkJICAgKHJlc291cmNlX3NpemUoZGV2bWVtLT5yZXNvdXJj
ZSkgPj4gUEFHRV9TSElGVCk7Ci0JZGV2bWVtLT5wYWdlX2ZhdWx0ID0gaG1tX2Rldm1lbV9mYXVs
dDsKIAogCWRldm1lbS0+cGFnZW1hcC50eXBlID0gTUVNT1JZX0RFVklDRV9QUklWQVRFOwogCWRl
dm1lbS0+cGFnZW1hcC5yZXMgPSAqZGV2bWVtLT5yZXNvdXJjZTsKZGlmZiAtLWdpdCBhL21tL21l
bW9yeS5jIGIvbW0vbWVtb3J5LmMKaW5kZXggYmQyMWU3MDYzYmYwLi4yOTNkMjkzNmZkNmMgMTAw
NjQ0Ci0tLSBhL21tL21lbW9yeS5jCisrKyBiL21tL21lbW9yeS5jCkBAIC0yNzQ4LDEzICsyNzQ4
LDggQEAgdm1fZmF1bHRfdCBkb19zd2FwX3BhZ2Uoc3RydWN0IHZtX2ZhdWx0ICp2bWYpCiAJCQlt
aWdyYXRpb25fZW50cnlfd2FpdCh2bWEtPnZtX21tLCB2bWYtPnBtZCwKIAkJCQkJICAgICB2bWYt
PmFkZHJlc3MpOwogCQl9IGVsc2UgaWYgKGlzX2RldmljZV9wcml2YXRlX2VudHJ5KGVudHJ5KSkg
ewotCQkJLyoKLQkJCSAqIEZvciB1bi1hZGRyZXNzYWJsZSBkZXZpY2UgbWVtb3J5IHdlIGNhbGwg
dGhlIHBnbWFwCi0JCQkgKiBmYXVsdCBoYW5kbGVyIGNhbGxiYWNrLiBUaGUgY2FsbGJhY2sgbXVz
dCBtaWdyYXRlCi0JCQkgKiB0aGUgcGFnZSBiYWNrIHRvIHNvbWUgQ1BVIGFjY2Vzc2libGUgcGFn
ZS4KLQkJCSAqLwotCQkJcmV0ID0gZGV2aWNlX3ByaXZhdGVfZW50cnlfZmF1bHQodm1hLCB2bWYt
PmFkZHJlc3MsIGVudHJ5LAotCQkJCQkJIHZtZi0+ZmxhZ3MsIHZtZi0+cG1kKTsKKwkJCXZtZi0+
cGFnZSA9IGRldmljZV9wcml2YXRlX2VudHJ5X3RvX3BhZ2UoZW50cnkpOworCQkJcmV0ID0gdm1m
LT5wYWdlLT5wZ21hcC0+b3BzLT5taWdyYXRlX3RvX3JhbSh2bWYpOwogCQl9IGVsc2UgaWYgKGlz
X2h3cG9pc29uX2VudHJ5KGVudHJ5KSkgewogCQkJcmV0ID0gVk1fRkFVTFRfSFdQT0lTT047CiAJ
CX0gZWxzZSB7Ci0tIAoyLjIwLjEKCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fCk5vdXZlYXUgbWFpbGluZyBsaXN0Ck5vdXZlYXVAbGlzdHMuZnJlZWRlc2t0
b3Aub3JnCmh0dHBzOi8vbGlzdHMuZnJlZWRlc2t0b3Aub3JnL21haWxtYW4vbGlzdGluZm8vbm91
dmVhdQ==
